name: Build, Test, and Deploy Kyosk Docker Image

on:
  push:
    branches:
      - production
  pull_request:
    branches:
      - production

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'openjdk'

      - name: Grant execution permissions for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Cache Gradle Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradlew') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Run Tests
        run: ./gradlew clean test

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'openjdk'

      - name: Grant execution permissions for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Cache Gradle Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradlew') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Build the JAR
        run: ./gradlew clean build -x test

      - name: Build Docker Image
        run: docker build -t paulodhiambo/kyosk .

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image
        run: docker push paulodhiambo/kyosk
